#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<queue>
#include<set>
using namespace std;

struct node{
    int value;
	int left=-1;
	int right=-1;
};
node *t1;
int* key;
int _index=0;

void dfsA(int root){
    if(root==-1){
        return;
    }
    dfsA(t1[root].left);
    t1[root].value=key[_index];
    _index++;
    dfsA(t1[root].right);
}


int main()
{
	freopen("data.txt","r",stdin);
	int length;
	cin>>length;
	t1=new node[length];
	key=new int[length];

	for(int i=0;i<length;i++){
        int a,b;
        cin>>a>>b;
        t1[i].left=a;
        t1[i].right=b;
	}

	for(int i=0;i<length;i++){
        cin>>key[i];
	}

	sort(key,key+length);

	dfsA(0);

    queue<int> q;
    q.push(0);
    vector<int> res;
    while(q.size()!=0){
        int i=q.front();
        res.push_back(t1[i].value);
        q.pop();
        if(t1[i].left!=-1) q.push(t1[i].left);
        if(t1[i].right!=-1) q.push(t1[i].right);
    }


    int len=res.size();
    for(int i=0;i<len;i++){
        if(i==len-1){
            printf("%d",res[i]);
        }
        else{
            printf("%d ",res[i]);
        }
    }
	return 0;
}












