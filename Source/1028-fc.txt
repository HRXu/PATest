#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<cstdio>
#include<string>
#include<vector>
#include<algorithm>
#include<math.h>
#include<regex>
#define ll long long
#define St 8*3600
using namespace std;
struct node {
	int ID;
	char name[9];
	int score;
};
void init(char *s) {
	for (int i = 0; i < 9; i++)
	{
		s[i] = 0;
	}
}
int cmps(const node &a, const node&b) {
	int res = 0;
	for (int i = 0; i < 9; i++)
	{
		if (a.name[i]==b.name[i])
		{
			continue;
		}
		else if (a.name[i]<b.name[i])
		{
			res = -1;
			break;
		}
		else
		{
			res = 1;
			break;
		}
	}
	return res;
}
bool cmp1(const node &a, const node &b) {
	return a.ID < b.ID;
}
bool cmp2(const node &a, const node &b) {
	int res = cmps(a, b);
	if (res!=0)
	{
		if (res==-1)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	else
	{
		return a.ID < b.ID;
	}
}
bool cmp3(const node &a, const node &b) {
	if (a.score==b.score)
	{
		return a.ID < b.ID;
	}
	return a.score < b.score;
}
int main()
{
	freopen("data.txt", "r", stdin);
	vector<node> list;
	int length,order;
	cin >> length >> order;
	for (int i = 0; i < length; i++)
	{
		node s;
		init(s.name);
		scanf("%d %s %d", &s.ID, &s.name, &s.score);
		list.push_back(s);
	}
	if (order==1)
	{
		sort(list.begin(), list.end(), cmp1);
	}
	else if (order==2)
	{
		sort(list.begin(), list.end(), cmp2);
	}
	else if (order==3)
	{
		sort(list.begin(), list.end(), cmp3);
	}

	for (int i = 0; i < length; i++)
	{
		printf("%06d %s %d\n", list[i].ID, list[i].name, list[i].score);
	}
	return 0;
}
