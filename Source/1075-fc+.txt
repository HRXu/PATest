#include <iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<map>
#include<set>
using namespace std;
struct node{
    int id;
    int* scores=nullptr;
    int pass;
    int total;
};
int users;
int problems;
int *marks;
node *plist;

vector<node> v;
bool cmp(const node&a,const node&b){
    if(a.total==b.total){
        if(a.pass==b.pass){
            return a.id<b.id;
        }
        return a.pass>b.pass;
    }
    return a.total>b.total;
}


int main()
{
    freopen("data.txt","r",stdin);
    int sub;
    scanf("%d %d %d",&users,&problems,&sub);
    marks=new int[problems];
    plist=new node[users];
    for(int i=0;i<problems;i++){
        scanf("%d",&marks[i]);
    }
    for(int i=0;i<sub;i++){
        int a,b,c;
        scanf("%d %d %d",&a,&b,&c);
        a--;b--;
        if(plist[a].scores==nullptr){
            plist[a].scores=new int[problems];
            for(int j=0;j<problems;j++)plist[a].scores[j]=-2;
        }

        plist[a].scores[b]=max(plist[a].scores[b],c);
    }

    for(int i=0;i<users;i++){
        if(plist[i].scores==nullptr)continue;

        bool flag=false;int d=0,s=0;
        for(int j=0;j<problems;j++){
            if(plist[i].scores[j]==marks[j]){
                s+=marks[j];
                d++;
                flag=true;
            }
            else if(plist[i].scores[j]==-2){
            }
            else if(plist[i].scores[j]==-1){
                plist[i].scores[j]=0;
            }
            else{
                s+=plist[i].scores[j];
                flag=true;
            }
        }
        if(flag) {
            plist[i].id=i+1;
            plist[i].pass=d;
            plist[i].total=s;
            v.push_back(plist[i]);
        }
    }

    sort(v.begin(),v.end(),cmp);
    int len=v.size();

    for(int i=0,rank=1,score=v[0].total;i<len;i++){
        if(v[i].total!=score)
        {
            rank=i+1;score=v[i].total;
        }
        printf("%d %05d %d",rank,v[i].id,v[i].total);
        for(int j=0;j<problems;j++){
            if(v[i].scores[j]==-2)printf(" -");
            else printf(" %d",v[i].scores[j]);
        }
        printf("\n");
    }
    return 0;
}
