#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cmath>
#include <string>
#include <queue>
#include<vector>
#include<algorithm>

using namespace std;
vector<int> v;
string IsHeap(int *a, int length);
void postorder(int i, int length, int * arr);
int main()
{ 
	int line = 0;
	int num = 0;
	
	scanf("%d %d", &line, &num);
	for (int i = 0; i < line; i++)
	{
		int* h = new int[num];
		for (int j = 0; j < num; j++)
		{
			scanf("%d", &h[j]);
		}
		cout << IsHeap(h, num) << "\n";
		for (int i = 0; i < v.size();)
		{
			cout << v[i];
			i++;
			if (i!=v.size())
			{
				cout<< " ";
			}
		}
		v.clear();
	}
	return 0;
}

string IsHeap(int *a, int length) {
	int type = 0;
	string res;
	for (int i = 0; i < length; i++)
	{
		int l = 2 * i + 1;
		int r = 2 * i + 2;
		if (l>=length||r>=length)
		{
			continue;
		}
		if (a[i]>=a[l]&&a[i]>=a[r])
		{
			if (type==2)
			{
				type = 0;
				break;
			}
			type = 1;
		}
		else if (a[i]<=a[l]&&a[i]<=a[r])
		{
			if (type==1)
			{
				type = 0;
				break;
			}
			type = 2;
		}
		else
		{
			type = 0;
			break;
		}
	}
	if (type==0)
	{
		res = "Not Heap";
	}
	if (type == 1)
	{
		res = "Max Heap";
	}
	if (type == 2)
	{
		res = "Min Heap";
	}
	postorder(0, length, a);
	return res;
}

void postorder(int i,int length,int * arr) {
	int l = 2 * i + 1;
	int r = 2 * i + 2;
	if (l<length)
	{
		postorder(l, length, arr);
	}
	if (r<length)
	{
		postorder(r, length, arr);
	}
	v.push_back(arr[i]);
}