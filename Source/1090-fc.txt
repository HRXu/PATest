#include <iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<map>
#include<set>
#include<cmath>
#include<stack>
using namespace std;

struct node{
    vector<int> next;
};
node *ls;

double _max=-1;
double root_price,increment;
int sum=0;
void dfs(int root,int level){
    if(ls[root].next.size()==0){
        double tmp=root_price*pow(increment,level);
        if(tmp==_max) {sum++;}
        else if(tmp>_max) {_max=tmp;sum=1;}
        return;
    }
    for(auto it:ls[root].next){
        dfs(it,level+1);
    }
}

int main()
{
    freopen("data.txt","r",stdin);
    int length;


    cin>>length>>root_price>>increment;

    ls=new node[length];
    increment/=100;
    increment+=1;
    int root;
    for(int i=0;i<length;i++){
        int tmp;
        cin>>tmp;
        if(tmp==-1){
            root=i;
        }
        else{
            ls[tmp].next.push_back(i);
        }
    }

    dfs(root,0);
    printf("%0.2f %d",_max,sum);
    return 0;
}
