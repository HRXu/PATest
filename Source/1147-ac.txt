#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<queue>
#include<cmath>
#include<map>
#include<unordered_map>
#include<set>
#include<regex>
#define FOR(i,a,b) for( int i=(a);i<(b);++i)
#define MEMSET(arr,value,type,length) memset(arr,value,sizeof(type)*length)
#define MEMSET_0(arr,type,length) MEMSET(arr,0,type,length)
#define MEMSET_MIN(arr,type,length) MEMSET(arr,-0x3f,type,length)
#define MEMSET_MAX(arr,type,length) MEMSET(arr,0x3f,type,length)
#define READ_IN(i) int i;cin>>i
using namespace std;
int *arr;
int length;
vector<int> res;

bool isMaxHeap(){
    FOR(i,0,length){
        int lchild=i*2+1;
        int rchild=i*2+2;
        if(lchild<length&&arr[lchild]>arr[i])return false;
        if(rchild<length&&arr[rchild]>arr[i])return false;
    }
    return true;
}
bool isMinHeap(){
    FOR(i,0,length){
        int lchild=i*2+1;
        int rchild=i*2+2;
        if(lchild<length&&arr[lchild]<arr[i])return false;
        if(rchild<length&&arr[rchild]<arr[i])return false;
    }
    return true;
}
void Postorder(int root){
    if(root>=length)return;
    Postorder(root*2+1);
    Postorder(root*2+2);
    res.push_back(arr[root]);
}
void display(){
    FOR(i,0,length){
        if(i==(length-1)){
            printf("%d",res[i]);
        }
        else {
            printf("%d ",res[i]);
        }
    }
}
int main()
{
    freopen("data.txt","r",stdin);
    int _count;
    cin>>_count>>length;

    arr=new int[length];

    FOR(i,0,_count){
        MEMSET_0(arr,int,length);
        res.clear();
        FOR(j,0,length){
            cin>>arr[j];
        }
        if(isMaxHeap()){
            printf("Max Heap\n");
        }
        else if(isMinHeap()){
            printf("Min Heap\n");
        }
        else{
            printf("Not Heap\n");
        }
        Postorder(0);
        display();
        printf("\n");
    }
	return 0;
}


