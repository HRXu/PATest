#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<cstdio>
#include<string>
#include<vector>
#include<algorithm>
#include<math.h>
#include<regex>
using namespace std;
string add(string &s1, string &s2) {
	int length = s1.size();

	char *d = new char[length];
	int d1=0;//½øÎ»
	for (int i = length-1; i >=0; i--)
	{
		int res = (s1[i] + s2[i] - '0' - '0');
		d[i] = ((res+d1)%10)+'0';
		d1 = ((res+d1) / 10);
	}
	if (d1==0)
	{
		return string(d,length);
	}
	string s(length + 1, '\0');
	s[0] = d1 + '0';
	for (int i = 1; i < length+1; i++)
	{
		s[i] = d[i - 1];
	}
	return s;
}
bool isP(string &s) {
	int count = s.size();
	if (count==1)
	{
		return true;
	}
	int ltr = count/2;
	for (int i = 0; i < ltr; i++)
	{
		if (s[i]!=s[count-i-1])
		{
			return false;
		}
	}
	return true;
}
int main()
{
	string s;
	cin >> s;

	for (int i = 0; i < 10; i++)
	{
		if (isP(s))
		{
			cout << s << " is a palindromic number.";
			return 0;
		}
		string s2 = s,res;
		reverse(s2.begin(), s2.end());
		res=add(s, s2);
		cout << s << " + " << s2 << " = " << res << endl;
		s = res;
	}
	cout << "Not found in 10 iterations.";
	return 0;
}
